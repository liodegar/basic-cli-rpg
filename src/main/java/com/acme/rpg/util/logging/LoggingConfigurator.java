/**
 * Copyright 2004 CANTV. All rights reserved.
 * CANTV PROPRIETARY/CONFIDENTIAL. Use is subject to license
 * terms.
 * <p>
 * This software is the confidential and proprietary information
 * of CANTV. ("Confidential Information"). You shall not
 * disclose such Confidential Information and shall use it only in
 * accordance with the terms of the license agreement you entered
 * into with CANTV.
 * <p>
 * Creation date: 2004-12-20
 */
package com.acme.rpg.util.logging;

import java.util.MissingResourceException;
import java.util.ResourceBundle;

/**
 * Class LoggingConfigurator
 * <p>
 * This class prints the log config files used to properly visualize the logs files generated by the RPG Logging Framework.
 * Besides, LoggingConfigurator is used to retrieve the configuration information from hera-logging.properties file.
 * In case of this file cannot be found and loaded, the RPG Logging Framework will be use the following default values:
 * <p>
 *
 * @author Liodegar Bracamonte
 */
public final class LoggingConfigurator {

    /**
     * The base name to build the ResourceBundle object used for logging configuration.
     */
    public static final String HERA_LOGGING_NAME = "hera-logging";

    /**
     * Optional key defined in <code>hera-logging.properties</code> to indicate the full qualified class name
     * of your UniversalLogger class. This value is declared here, in order to avoid circular references
     * with RPGProperty class.
     */
    public static final String LOGGING_CLASS_NAME = "loggingClass";


    /**
     * The private modifier is to avoid the instantiation outside this class
     */
    private LoggingConfigurator() {
    }

    /**
     * Gets a string for the given key from <code>hera-logging.properties</code>.
     *
     * @param key the key for the desired string
     * @return the string for the given key or null if no object for the given key can be found
     * @throws java.lang.NullPointerException if <code>key</code> is <code>null</code>
     */
    public static String getString(String key) {
        return getString(key, HERA_LOGGING_NAME);
    }

    /**
     * Gets a string for the given key from <code>hera-logging.properties</code>.
     *
     * @return the string for the given key or null if no object for the given key can be found
     * @throws java.lang.NullPointerException if <code>key</code> is <code>null</code>
     */
    public static String getLoggingClassName() {
        return getString(LOGGING_CLASS_NAME);
    }


    /**
     * Gets a string for the given key using the ResourceBundle object.
     *
     * @param key      the key for the desired string
     * @param baseName the base name of the resource bundle, a fully qualified class name
     * @return the string for the given key or null if no object for the given key can be found
     */
    private static String getString(String key, String baseName) {
        try {
            ResourceBundle bundle = getProperties(baseName);
            if (bundle == null) {
                return null;
            }
            return bundle.getString(key);
        } catch (MissingResourceException e) {
            return null;
        }
    }

    /**
     * Gets a resource bundle using the specified base name
     *
     * @param baseName the base name of the resource bundle, a fully qualified class name
     * @return The ResourceBundle object if a resource bundle for the specified base baseName can be found, otherwise returns null.
     */
    private static ResourceBundle getProperties(String baseName) {
        try {
            return ResourceBundle.getBundle(baseName);
        } catch (Exception e) {
            return null;
        }
    }

}
